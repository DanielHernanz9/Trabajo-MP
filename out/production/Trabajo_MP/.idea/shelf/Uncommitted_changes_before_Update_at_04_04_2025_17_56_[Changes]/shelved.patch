Index: Grupo6/src/Esbirros/EsbirroBase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Grupo6.src.Esbirros;\r\n\r\n/**\r\n * \r\n */\r\npublic abstract class EsbirroBase extends Esbirro {\r\n\r\n    /**\r\n     * \r\n     */\r\n    private String Nombre;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private int Salud = 3;\r\n\r\n    /**\r\n     * Default constructor, no se deberia instanciar este\r\n     */\r\n    public EsbirroBase(String Nombre) {\r\n        this.Nombre = Nombre;\r\n    }\r\n\r\n    /**\r\n     * Conviene implementar aquí el metodo recibir daño ya que es comun para todos\r\n     * tambien conviene implementar los getters y setters de los atributos comunes\r\n     * @return\r\n     */\r\n    public int recibirDaño(){\r\n        Salud--;\r\n        return Salud;\r\n    }\r\n    public int getSalud(){\r\n        return Salud;\r\n    }\r\n    public void setSalud(int salud){\r\n        Salud = salud;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Grupo6/src/Esbirros/EsbirroBase.java b/Grupo6/src/Esbirros/EsbirroBase.java
--- a/Grupo6/src/Esbirros/EsbirroBase.java	(revision 3932bcf2ede6a97e7eafe156c7468dcd034f5ee5)
+++ b/Grupo6/src/Esbirros/EsbirroBase.java	(date 1743782168381)
@@ -27,10 +27,14 @@
      * tambien conviene implementar los getters y setters de los atributos comunes
      * @return
      */
+
     public int recibirDaño(){
-        Salud--;
+        if(Salud - 1 < 0){      //Vamos a cosiderar que la vida no puede ser negativa
+            Salud--;
+        }
         return Salud;
     }
+
     public int getSalud(){
         return Salud;
     }
Index: Grupo6/src/Esbirros/Esbirro.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Grupo6.src.Esbirros;\r\n\r\n/**\r\n * \r\n */\r\npublic abstract class Esbirro {\r\n\r\n    /**\r\n     * Default constructor\r\n     */\r\n    public Esbirro() {\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Grupo6/src/Esbirros/Esbirro.java b/Grupo6/src/Esbirros/Esbirro.java
--- a/Grupo6/src/Esbirros/Esbirro.java	(revision 3932bcf2ede6a97e7eafe156c7468dcd034f5ee5)
+++ b/Grupo6/src/Esbirros/Esbirro.java	(date 1743782168267)
@@ -11,8 +11,4 @@
     public Esbirro() {
     }
 
-    /**
-     * 
-     */
-
 }
\ No newline at end of file
Index: Grupo6/src/Esbirros/FabricaEsbirros.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Grupo6.src.Esbirros;\r\n\r\n/**\r\n * \r\n */\r\npublic class FabricaEsbirros {\r\n\r\n    /**\r\n     * Default constructor\r\n     */\r\n    public FabricaEsbirros() {\r\n    }\r\n\r\n    /**\r\n     * @return\r\n     */\r\n\r\n    public Esbirro createEsbirro(String Nombre) {\r\n        return null;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Grupo6/src/Esbirros/FabricaEsbirros.java b/Grupo6/src/Esbirros/FabricaEsbirros.java
--- a/Grupo6/src/Esbirros/FabricaEsbirros.java	(revision 3932bcf2ede6a97e7eafe156c7468dcd034f5ee5)
+++ b/Grupo6/src/Esbirros/FabricaEsbirros.java	(date 1743781775745)
@@ -3,7 +3,7 @@
 /**
  * 
  */
-public class FabricaEsbirros {
+public abstract class FabricaEsbirros {
 
     /**
      * Default constructor
@@ -15,8 +15,6 @@
      * @return
      */
 
-    public Esbirro createEsbirro(String Nombre) {
-        return null;
-    }
+    public abstract Esbirro createEsbirro(String Nombre);
 
 }
\ No newline at end of file
Index: Grupo6/src/App/Operador.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Grupo6.src.App;\r\n\r\nimport Grupo6.src.Desafio.*;\r\n\r\n/**\r\n * \r\n */\r\npublic class Operador extends Usuario {\r\n\r\n    private Handler ValidadorDesafio;\r\n\r\n    /**\r\n     * Default constructor\r\n     */\r\n    public Operador() {\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n\r\n    /**\r\n     * @param Desafio \r\n     * @return\r\n     */\r\n    public Boolean validarDesafio(Desafio Desafio) {\r\n        // TODO implement here\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @param Jugador\r\n     */\r\n    public void editarPersonaje(Jugador Jugador) {\r\n        // TODO implement here\r\n    }\r\n\r\n    /**\r\n     * @param Jugador\r\n     */\r\n    public void bloquearUsuario(Jugador Jugador) {\r\n        // TODO implement here\r\n    }\r\n\r\n    /**\r\n     * @param Jugador\r\n     */\r\n    public void desbloquearUsuario(Jugador Jugador) {\r\n        // TODO implement here\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Grupo6/src/App/Operador.java b/Grupo6/src/App/Operador.java
--- a/Grupo6/src/App/Operador.java	(revision 3932bcf2ede6a97e7eafe156c7468dcd034f5ee5)
+++ b/Grupo6/src/App/Operador.java	(date 1743779263463)
@@ -1,14 +1,12 @@
 package Grupo6.src.App;
 
-import Grupo6.src.Desafio.*;
+import Handler;
 
 /**
  * 
  */
 public class Operador extends Usuario {
 
-    private Handler ValidadorDesafio;
-
     /**
      * Default constructor
      */
@@ -18,12 +16,13 @@
     /**
      * 
      */
+    private Handler ValidadorDesafio;
 
     /**
      * @param Desafio 
      * @return
      */
-    public Boolean validarDesafio(Desafio Desafio) {
+    public Boolean validarDesafio(void Desafio) {
         // TODO implement here
         return null;
     }
@@ -31,23 +30,29 @@
     /**
      * @param Jugador
      */
-    public void editarPersonaje(Jugador Jugador) {
+    public void editarPersonaje(void Jugador) {
+        // TODO implement here
+    }
+
+    /**
+     * @param Jugador
+     */
+    public void bloquearUsuario(void Jugador) {
         // TODO implement here
     }
 
     /**
      * @param Jugador
      */
-    public void bloquearUsuario(Jugador Jugador) {
+    public void desbloquearUsuario(void Jugador) {
         // TODO implement here
     }
 
     /**
      * @param Jugador
      */
-    public void desbloquearUsuario(Jugador Jugador) {
+    public void desbloquearUsuario(void Jugador) {
         // TODO implement here
     }
 
-
 }
\ No newline at end of file
Index: Grupo6/src/Esbirros/EsbirrosComposite.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Grupo6.src.Esbirros;\r\n\r\nimport java.util.ArrayList;\r\n\r\n/**\r\n * \r\n */\r\npublic class EsbirrosComposite {\r\n\r\n    /**\r\n     * Default constructor\r\n     */\r\n    public EsbirrosComposite() {\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    private Esbirro childrenComposite;\r\n\r\n    /**\r\n     * @param\r\n     */\r\n    public void add(Esbirro esbirro) {\r\n        // TODO implement here\r\n    }\r\n\r\n    /**\r\n     * @param\r\n     */\r\n    public void remove(Esbirro esbirro) {\r\n        // TODO implement here\r\n    }\r\n\r\n    /**\r\n     * @return\r\n     */\r\n    public ArrayList<Esbirro> getChildren() {\r\n        // TODO implement here\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    public void recibirDaño() {\r\n        // TODO implement here\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Grupo6/src/Esbirros/EsbirrosComposite.java b/Grupo6/src/Esbirros/EsbirrosComposite.java
--- a/Grupo6/src/Esbirros/EsbirrosComposite.java	(revision 3932bcf2ede6a97e7eafe156c7468dcd034f5ee5)
+++ b/Grupo6/src/Esbirros/EsbirrosComposite.java	(date 1743781234525)
@@ -1,50 +1,45 @@
 package Grupo6.src.Esbirros;
 
 import java.util.ArrayList;
-
-/**
- * 
- */
-public class EsbirrosComposite {
+import java.util.Iterator;
+import java.util.List;
 
-    /**
-     * Default constructor
-     */
-    public EsbirrosComposite() {
-    }
+public class EsbirrosComposite extends EsbirroBase {
+    private List<EsbirroBase> childrenComposite = new ArrayList<>();
+    private int demonIndex;
 
     /**
-     * 
+     * Default constructor, no se deberia instanciar este
+     *
+     * @param Nombre
      */
-    private Esbirro childrenComposite;
+    public EsbirrosComposite(String Nombre) {
+        super(Nombre);
+        this.demonIndex = 0;
+    }
 
-    /**
-     * @param
-     */
-    public void add(Esbirro esbirro) {
-        // TODO implement here
+    public void add(EsbirroBase esbirro) {
+        childrenComposite.add(esbirro);
     }
 
-    /**
-     * @param
-     */
     public void remove(Esbirro esbirro) {
-        // TODO implement here
+        childrenComposite.remove(esbirro);
     }
 
-    /**
-     * @return
-     */
-    public ArrayList<Esbirro> getChildren() {
-        // TODO implement here
-        return null;
+    public List<EsbirroBase> getChildren() {
+        return childrenComposite;
     }
 
-    /**
-     * 
-     */
-    public void recibirDaño() {
-        // TODO implement here
-    }
+    @Override
+    public int recibirDaño() {
+        if (!childrenComposite.isEmpty()) {
+            EsbirroBase lastEsbirro = childrenComposite.get(childrenComposite.size() - 1);
+            lastEsbirro.recibirDaño();
 
+            if (lastEsbirro.getSalud() <= 0) {
+                childrenComposite.remove(lastEsbirro);
+            }
+        }
+        return childrenComposite.size();
+    }
 }
\ No newline at end of file
Index: Grupo6/src/Esbirros/Humano.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Grupo6.src.Esbirros;\r\n\r\npublic class Humano extends EsbirroBase {\r\n    private Lealtad lealtad = Lealtad.ALTA;\r\n    private String nombre;\r\n\r\n    public Humano(String nombre) {\r\n        super(nombre);\r\n        this.lealtad = Lealtad.MEDIA;\r\n    }\r\n\r\n    // Hacer la enumeración pública y estática\r\n    public static enum Lealtad {\r\n        BAJA,\r\n        MEDIA,\r\n        ALTA;\r\n\r\n        public Lealtad subir() {\r\n            int next = this.ordinal() + 1;\r\n            if (next >= 3) return this;\r\n            return values()[next];\r\n        }\r\n\r\n        public Lealtad bajar() {\r\n            int prev = this.ordinal() - 1;\r\n            if (prev < 0) return this;\r\n            return values()[prev];\r\n        }\r\n\r\n        public String lealtadString() {\r\n            return switch (this) {\r\n                case ALTA -> \"Alta\";\r\n                case MEDIA -> \"Media\";\r\n                case BAJA -> \"Baja\";\r\n            };\r\n        }\r\n    }\r\n\r\n    public Lealtad getLealtad() {\r\n        return this.lealtad;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Grupo6/src/Esbirros/Humano.java b/Grupo6/src/Esbirros/Humano.java
--- a/Grupo6/src/Esbirros/Humano.java	(revision 3932bcf2ede6a97e7eafe156c7468dcd034f5ee5)
+++ b/Grupo6/src/Esbirros/Humano.java	(date 1743781775667)
@@ -2,15 +2,14 @@
 
 public class Humano extends EsbirroBase {
     private Lealtad lealtad = Lealtad.ALTA;
-    private String nombre;
+    private String Nombre;
 
-    public Humano(String nombre) {
-        super(nombre);
+    public Humano(String Nombre) {
+        super(Nombre);
         this.lealtad = Lealtad.MEDIA;
     }
 
-    // Hacer la enumeración pública y estática
-    public static enum Lealtad {
+    public enum Lealtad {
         BAJA,
         MEDIA,
         ALTA;
Index: Grupo6/src/Esbirros/Demonio.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Grupo6.src.Esbirros;\r\n\r\n/**\r\n * \r\n */\r\npublic class Demonio extends EsbirroBase {\r\n\r\n    /**\r\n     * Default constructor\r\n     */\r\n    public Demonio(String Nombre, String Pacto) {\r\n        super(Nombre);\r\n        this.Pacto = Pacto;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    private String Pacto;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private EsbirrosComposite Subordinados;\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Grupo6/src/Esbirros/Demonio.java b/Grupo6/src/Esbirros/Demonio.java
--- a/Grupo6/src/Esbirros/Demonio.java	(revision 3932bcf2ede6a97e7eafe156c7468dcd034f5ee5)
+++ b/Grupo6/src/Esbirros/Demonio.java	(date 1743781904660)
@@ -1,26 +1,40 @@
 package Grupo6.src.Esbirros;
 
-/**
- * 
- */
 public class Demonio extends EsbirroBase {
+    private String pacto;
+    private EsbirrosComposite subordinados;
+
+    public Demonio(String nombre, String pacto) {
+        super(nombre);
+        this.pacto = pacto;
+        this.subordinados = new EsbirrosComposite(nombre + "_Subordinados");
+    }
+
+    public void addSubordinado(EsbirroBase esbirro) {
+        subordinados.add(esbirro);
+    }
 
-    /**
-     * Default constructor
-     */
-    public Demonio(String Nombre, String Pacto) {
-        super(Nombre);
-        this.Pacto = Pacto;
+    public void removeSubordinado(EsbirroBase esbirro) {
+        subordinados.remove(esbirro);
     }
 
-    /**
-     * 
-     */
-    private String Pacto;
+    public EsbirrosComposite getSubordinados() {
+        return subordinados;
+    }
 
-    /**
-     * 
-     */
-    private EsbirrosComposite Subordinados;
+    @Override
+    public int recibirDaño() {
+        if (!subordinados.getChildren().isEmpty()) {
+            // Aplica daño al último esbirro subordinado
+            subordinados.recibirDaño();
+        } else {
+            // Si no hay subordinados, el demonio recibe el daño
+            return super.recibirDaño();
+        }
+        return getSalud();
+    }
 
+    public String getPacto(){
+        return this.pacto;
+    }
 }
\ No newline at end of file
